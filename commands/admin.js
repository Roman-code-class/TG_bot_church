// roles.js ‚Äî –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /roles
const { loadRoles } = require("../utils/loadRoles");
const { escapeMarkdown } = require("../utils/escapeMarkdown");

module.exports = (bot) => {
  bot.command("roles", (ctx) => {
    const roles = loadRoles(); // –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–æ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞
    const userId = ctx.from.id;

    if (!roles.admin.some((user) => user.id === userId)) {
      return ctx.reply(
        "‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã."
      );
    }

    let responseText = "üìú <b>–°–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b>\n\n";

    for (const [role, users] of Object.entries(roles)) {
      let roleName = "";

      switch (role) {
        case "admin":
          roleName = "üëë <b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã</b>";
          break;
        case "organizer_1":
          roleName = "üìå <b>–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã 1 —É—Ä–æ–≤–Ω—è</b>";
          break;
        case "organizer_2":
          roleName = "üìå <b>–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã 2 —É—Ä–æ–≤–Ω—è</b>";
          break;
        case "organizer_3":
          roleName = "üìå <b>–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã 3 —É—Ä–æ–≤–Ω—è</b>";
          break;
        case "guest":
          roleName = "üßë‚Äçüíº <b>–ì–æ—Å—Ç–∏</b>";
          break;
      }

      responseText += `${roleName}:\n`;
      if (users.length === 0) {
        responseText += "<i>–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</i>\n";
      } else {
        users.forEach((user) => {
          responseText += `- <i>${escapeMarkdown(user.name)}</i> (ID: <code>${
            user.id
          }</code>)\n`;
        });
      }
      responseText += "\n";
    }

    ctx.replyWithHTML(responseText);
  });
};
