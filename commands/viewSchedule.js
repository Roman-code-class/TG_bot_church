// –∫–æ–º–∞–Ω–¥–∞ - –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–±—ã–π—Ç–∏
const { Markup } = require("telegraf");
const { viewAllSchedule } = require("../utils/viewAllSchedule");
const registerCustomEventButtons = require("../utils/registerCustomEventButtons");
const { getUserSchedule } = require("../utils/userSchedule");
const userSessions = require("../utils/userSessions");

module.exports = (bot) => {
  bot.command("viewSchedule", (ctx) => {
    ctx.reply(
      "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:",
      Markup.inlineKeyboard([
        [Markup.button.callback("üìã –í—Å–µ —Å–æ–±—ã—Ç–∏—è", "view_all")],
        [Markup.button.callback("üé≠ –ü–æ —Ç–∏–ø—É —Å–æ–±—ã—Ç–∏—è", "view_choose_event")],
        [Markup.button.callback("üë§ –ú–æ—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ", "view_user_schedule")],
      ])
    );
  });

  // –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å–æ–±—ã—Ç–∏—è
  bot.action("view_all", async (ctx) => {
    await viewAllSchedule(ctx);
  });

  registerCustomEventButtons(bot, "view_choose_event");

  bot.action("view_user_schedule", async (ctx) => {
    const userId = ctx.from.id; // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const response = getUserSchedule(userId);
    ctx.reply(response);
  });
};
