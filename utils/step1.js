// –≥–¥–µ-—Ç–æ –Ω–∞–≤–µ—Ä—Ö—É
const userSessions = {}; // { [userId]: { step: 0, chosenMonth: null, eventIndex: null, programData: {} } }

bot.action(/s2_mode_step_(.+)_(.+)/, async (ctx) => {
  const chosenMonth = ctx.match[1];
  const eventIndex = parseInt(ctx.match[2]);

  const userId = ctx.from.id;
  userSessions[userId] = {
    mode: "step",
    step: 1,
    chosenMonth,
    eventIndex,
    programData: {},
  };

  await ctx.reply(
    "–ü–æ—à–∞–≥–æ–≤—ã–π —Ä–µ–∂–∏–º —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è2.\n–®–∞–≥ 1: –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –ø—É–Ω–∫—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ú–æ–ª–∏—Ç–≤–∞')."
  );
});

// –ó–∞—Ç–µ–º –≤ bot.on("text"), –µ—Å–ª–∏ —É userSessions[userId].mode === "step" ‚Äì –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç

bot.on("text", (ctx) => {
  const userId = ctx.from.id;
  if (!userSessions[userId] || userSessions[userId].mode !== "step") {
    return; // –Ω–µ –≤ —Ä–µ–∂–∏–º–µ –ø–æ—à–∞–≥–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞
  }

  const session = userSessions[userId];

  if (session.step === 1) {
    session.programData.firstPoint = ctx.message.text;
    session.step++;
    return ctx.reply(
      "–®–∞–≥ 2: –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –ø—É–Ω–∫—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ü—Ä–æ–ø–æ–≤–µ–¥—å')."
    );
  }
  if (session.step === 2) {
    session.programData.secondPoint = ctx.message.text;
    session.step++;
    return ctx.reply(
      "–®–∞–≥ 3: –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ—Ç—å–µ–≥–æ –ø—É–Ω–∫—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ü–µ–Ω–∏–µ')."
    );
  }
  // –ò —Ç–∞–∫ –¥–∞–ª–µ–µ, –ø–æ–∫–∞ –Ω–µ —Å–æ–±–µ—Ä—ë–º –≤—Å—é –ø—Ä–æ–≥—Ä–∞–º–º—É.
  // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏, –ª—É—á—à–µ —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ –ø—É–Ω–∫—Ç–æ–≤ –Ω—É–∂–Ω–æ, –∞ –Ω–µ –∂—ë—Å—Ç–∫–æ 3.

  if (session.step === 3) {
    session.programData.thirdPoint = ctx.message.text;
    session.step = 999; // —É—Å–ª–æ–≤–Ω–æ ¬´–≥–æ—Ç–æ–≤–æ¬ª

    // –°—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–µ–≤—å—é
    let preview = "üìã –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ2:\n";
    preview += `1. ${session.programData.firstPoint}\n`;
    preview += `2. ${session.programData.secondPoint}\n`;
    preview += `3. ${session.programData.thirdPoint}\n`;
    // ...

    return ctx.reply(
      `–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:\n\n${preview}\n\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å?`,
      Markup.inlineKeyboard([
        [
          Markup.button.callback(
            "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
            `s2_confirm_${session.chosenMonth}_${session.eventIndex}`
          ),
        ],
        [Markup.button.callback("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", `s2_cancel`)],
      ])
    );
  }
});
